apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
  namespace: keycloak-system
data:
  realm-config.json: |
    {
      "id" : "109f4cf0-5117-45c5-8319-5f14f0502969",
      "realm" : "ecommerce",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxTemporaryLockouts" : 0,
      "bruteForceStrategy" : "MULTIPLE",
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "users" : [ {
        "id" : "6e0a4c14-6b79-4f0b-a045-055469d879b1",
        "username" : "service-account-ecommerce-admin-client",
        "emailVerified" : false,
        "createdTimestamp" : 1746551456635,
        "enabled" : true,
        "totp" : false,
        "serviceAccountClientId" : "ecommerce-admin-client",
        "credentials" : [ ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-ecommerce" ],
        "clientRoles" : {
          "realm-management" : [ "manage-users", "manage-realm" ]
        },
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "roles" : {
        "realm" : [ {
          "id" : "c2b3a72c-fbd5-4d9c-9f87-9e64a5a7a8a7",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "109f4cf0-5117-45c5-8319-5f14f0502969",
          "attributes" : { }
        }, {
          "id" : "21f03077-66a8-4a21-95d4-05546f809c38",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "109f4cf0-5117-45c5-8319-5f14f0502969",
          "attributes" : { }
        }, {
          "id" : "683f7574-54d2-43c2-8c56-f9b39af632cf",
          "name" : "default-roles-ecommerce",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization" ],
            "client" : {
              "account" : [ "manage-account", "view-profile" ]
            }
          },
          "clientRole" : false,
          "containerId" : "109f4cf0-5117-45c5-8319-5f14f0502969",
          "attributes" : { }
        }, {
          "id" : "aa04fa29-51cc-458d-8051-e37fc3da657d",
          "name" : "admin",
          "description" : "",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "109f4cf0-5117-45c5-8319-5f14f0502969",
          "attributes" : { }
        }, {
          "id" : "6f0265b1-dfa7-44e3-a203-7ed08d9e3a7c",
          "name" : "user",
          "description" : "",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "109f4cf0-5117-45c5-8319-5f14f0502969",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "9b4a653f-586b-4ae6-b8cb-3059263ab8b5",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "46c39c95-19eb-45c4-a37d-75f865fbf666",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "5ff36522-ffb0-48d6-9c10-2d66e281fa52",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "0c7ecfe6-fb71-4238-b413-98be98c05b3d",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "21667384-ebb9-4afc-a96d-8657dced3677",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "ade44b58-9ad6-428d-a7b2-af54b8cc4032",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "b1f1bfe4-1cc8-492c-8d7c-3a4a489d2d88",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "d5d86b98-dbd3-4e7d-a00d-5b389b55a18b",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "eed7dd0e-767d-4bc7-920a-087e5591a757",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "075b5ce5-be24-4fbe-8014-e234c975619c",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "d3871a49-bf5d-4cf9-b8cc-72f458b69920",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "0ba35512-3c83-4b30-9575-52e60157833c",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "80f05880-5060-4e34-af2c-981859615f64",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "efbc8b5c-d051-4516-aa16-0538bfb9fa4a",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "c2893f92-2a2d-4511-9556-3ee2d96b0614",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "ece2b4e2-72a3-4012-ad16-51d9727e9fe9",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "ea313895-16c2-477b-be77-d114c8713f5a",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "388fc6c2-1730-4d48-a818-c267fb739600",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-groups", "query-users" ]
              }
            },
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          }, {
            "id" : "9b1b24ca-6efc-4a69-a16c-56235de3f0dd",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-groups", "view-events", "manage-events", "query-clients", "view-authorization", "manage-authorization", "query-realms", "manage-realm", "view-clients", "manage-clients", "manage-users", "impersonation", "view-identity-providers", "manage-identity-providers", "view-realm", "query-users", "create-client", "view-users" ]
              }
            },
            "clientRole" : true,
            "containerId" : "62e76778-bb40-455e-a837-1258ea395254",
            "attributes" : { }
          } ],
          "ecommerce-admin-client" : [ ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "e5ca1733-a75f-40e8-b0ef-2399a5d3b8e5",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b6a75e11-6ed3-47de-88b4-c033532662fe",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "e95f2937-a999-48be-82b4-aa6c1d4fbba9",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "1a667243-4d89-4008-bd17-511ee88741bd",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "4edfafc0-9329-486d-ad24-62ad27beebaf",
            "name" : "view-groups",
            "description" : "${role_view-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "6b728530-b7d3-4ed4-ade1-18e59e1bea69",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "cf245eb1-3286-4b44-86b3-4b686714b045",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "ddd4d0e2-4e3e-4b8a-9730-4e2eda4543a8",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "653b0ffa-7db5-4100-a0e3-9040977e5ea5",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          }, {
            "id" : "a045c53b-dea9-40fa-89d6-bb24964499cc",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
            "attributes" : { }
          } ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "683f7574-54d2-43c2-8c56-f9b39af632cf",
        "name" : "default-roles-ecommerce",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "109f4cf0-5117-45c5-8319-5f14f0502969"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpPolicyCodeReusable" : false,
      "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
      "localizationTexts" : { },
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyExtraOrigins" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account", "view-groups" ]
        } ]
      },
      "clients" : [ {
        "id" : "6b50377b-eaad-49f0-90ec-c277491c2ef7",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/ecommerce/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/ecommerce/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "ef67333b-d4c7-4298-8dd3-0e34acb11de9",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/ecommerce/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/ecommerce/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "864871ff-2a7f-405e-a373-496f2e449e12",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "15603f56-6119-453f-b42f-ea4ba49d1f70",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "client.use.lightweight.access.token.enabled" : "true",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b6a75e11-6ed3-47de-88b4-c033532662fe",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "true",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "cb174822-1799-4bdf-bb21-680e2bf85f8d",
        "clientId" : "ecommerce-admin-client",
        "name" : "",
        "description" : "",
        "rootUrl" : "",
        "adminUrl" : "",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "s3cr3t",
        "redirectUris" : [ "/*" ],
        "webOrigins" : [ "/*" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : true,
        "publicClient" : false,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "oidc.ciba.grant.enabled" : "false",
          "client.secret.creation.time" : "1746551456",
          "backchannel.logout.session.required" : "true",
          "standard.token.exchange.enabled" : "false",
          "post.logout.redirect.uris" : "+",
          "frontchannel.logout.session.required" : "true",
          "oauth2.device.authorization.grant.enabled" : "false",
          "display.on.consent.screen" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "defaultClientScopes" : [ "web-origins", "service_account", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "62e76778-bb40-455e-a837-1258ea395254",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "true",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "c61b20ee-287e-478e-a8dc-9b26c401b4f9",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/ecommerce/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/ecommerce/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "client.use.lightweight.access.token.enabled" : "true",
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "cff879ac-d004-46ab-bd16-0111557d7ac9",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "f10c8a01-5a42-43e6-b352-d0863239269a",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "c8ab19ef-2db5-43a5-b873-062fe091b9c7",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "24e31fa9-377f-4a66-939f-99e3b0a31015",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "c078d504-8d39-42bc-b58f-d7caa0599d78",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${emailScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "17b929b9-db55-4a33-9b83-63652a47fb11",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "8477d13f-2789-44d5-afba-258a3c18a7e6",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "3699c122-df79-4e51-adba-08537f0d829e",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "42c6c5c1-f689-4e7c-a949-5a8dc4f55ea3",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "e1eef87c-0cf2-41e6-aa03-a3a99ba088c4",
        "name" : "acr",
        "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "a6cb92ed-21bb-459a-aa98-e2f2334e1cfc",
          "name" : "acr loa level",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-acr-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "0e20dc35-1824-4957-ab08-3aad74b71e81",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "61f7133b-ead0-4028-8a10-83bdc9144674",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "7bbe2542-b53d-4776-aa96-7475d105041c",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "58d481c1-5c11-4848-84df-e41c7d3977f9",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "${rolesScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "6b2012a3-9443-4905-9f7a-493f0dc0c070",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "f6e5b1d7-348c-4e82-b5f0-532548904559",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "ffd8fafe-aac4-4954-8f3f-e80701ae2030",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "c28869fd-9df2-4097-9c06-e57b78c869e8",
        "name" : "organization",
        "description" : "Additional claims about the organization a subject belongs to",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${organizationScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "cb035b9d-0436-4cd4-b0be-2b24f2e0e0a4",
          "name" : "organization",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-organization-membership-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "organization",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "39d0602e-b367-4b54-98e4-1f0de0561f5b",
        "name" : "basic",
        "description" : "OpenID Connect scope for add all basic claims to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "2d5e411b-4d82-42c1-a86a-9cfac46e607a",
          "name" : "sub",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-sub-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        }, {
          "id" : "716d6e66-c66d-4cae-9f83-c1391f1da6ef",
          "name" : "auth_time",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "AUTH_TIME",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "auth_time",
            "jsonType.label" : "long"
          }
        } ]
      }, {
        "id" : "bc91ae16-ebba-4e06-8398-0318da833fa3",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "31f6137a-ceff-46cb-940b-e00bbb5c1640",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "867dc96f-dd15-4323-9807-54f0d579cefe",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "3104e9d5-ffdd-436e-8a40-a0dc214dc87d",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${addressScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "2da1f3a2-2872-481d-add7-a5a9266b59fb",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "introspection.token.claim" : "true",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "7ce4ff8a-c233-441a-aa3a-676ded282929",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${profileScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "1f000cff-763e-4b65-ad7f-8b7c9f83dee4",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "db05b1e4-4f09-40d1-8cf8-f1e0ebf3d74a",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "f11b0a46-a027-4b9e-8784-1a5c5addd6d7",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "509d564f-48a0-4b39-84f1-d2d63910dffe",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "c481a5f5-2497-441b-a8a4-501ee29b08ba",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "bb0e9ba4-aa28-4b9a-a175-2a781668fbba",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "0d730aaf-7e99-4916-9aac-6abe28fa386d",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ab3f1f8d-3884-4792-adb8-90af9475dc2a",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "9183094e-7352-4057-a708-0d161320459d",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "de620308-e0b8-4765-8705-b35a1e214cd7",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "04500ad7-c034-4eac-886e-a460a0ce993c",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "0e53dd53-3f3b-413f-88d1-d90d8e754cda",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2d10f51b-d764-4075-b08b-98e7215cf38c",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "38bdb131-6cde-4313-8b77-fc9edcbe9fd6",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "05f52543-0e23-475a-9d8e-bc0a9ed744e8",
        "name" : "saml_organization",
        "description" : "Organization Membership",
        "protocol" : "saml",
        "attributes" : {
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "d4ac9ab8-17be-4226-8877-c2bda72f8842",
          "name" : "organization",
          "protocol" : "saml",
          "protocolMapper" : "saml-organization-membership-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "9010ca4a-7e80-4759-879b-8980dfb83d8b",
        "name" : "service_account",
        "description" : "Specific scope for a client enabled for service accounts",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "53e02042-b1fc-4148-b46f-fd5934b7380e",
          "name" : "Client ID",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "client_id",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "client_id",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "c669051a-d1fc-446e-8b90-95d1b801c3d3",
          "name" : "Client Host",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientHost",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientHost",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "d2ed6e58-d5fe-4b5c-bc09-2b9314dc13dd",
          "name" : "Client IP Address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientAddress",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientAddress",
            "jsonType.label" : "String"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
      "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "referrerPolicy" : "no-referrer",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "b706fbde-3dab-4e2e-8ed2-4f357a090e18",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        }, {
          "id" : "58fce241-bffb-45ff-9816-09378ccca111",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "21cb5289-d076-4028-a8a8-70e69e34831b",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper" ]
          }
        }, {
          "id" : "dbd38da3-68db-40cd-ab9b-6440071bf291",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "3071960b-e7bb-43eb-8112-25e2f6c94bb9",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "41f70466-f4e4-48fe-b15c-f856ef943f6f",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "01b1686c-3016-4cd7-8c34-8a342095d7c9",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "ca52e057-2cf5-43fc-b0d2-87d055126a21",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "d45beeeb-4ee5-4c14-bd42-83226f817dc7",
          "name" : "hmac-generated-hs512",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "c9baa80b-d5f3-4451-a668-e466c894abc6" ],
            "secret" : [ "4hinbLwlk1akKzfyuYGZZZyIYpLzsR3-TQzwkl8Nakp1R9csxE8q-nax7nk2jcWi7xw5ioQZtKeLspURRlKBCCSDpg3SF_8936083IZq3gAb3aJlNuI0rpnNMXwtCYGbYYlb3ORZVPMkcmSVS8FHKVosj5X35kGE-aZiXMld25I" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS512" ]
          }
        }, {
          "id" : "c41d9bce-3bb7-407c-8e9f-d9e8cbd652fa",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEpAIBAAKCAQEAwiNkTrMpePVQDegGARvpMTIPEN0tMLodcmITaIjKkctsA6nc+sPabdrz2jMR8aEQxNwHHgalOlXpEb+QnxutmlzATGniH5sqJ/HMZfzTFHUmzr8gV9LU9twsFMLSNwW4qCC6wBwdeSBBmB8SGIBLymWYSbOVk4BnK/mgaRtdG5MIhBZEeYsigOiC+tEDMKt3Y58Pg2IkifWz+2fxBnoXYfaSRjfI9CBbozSGm7fi1lxLkbjTzsc0Ps16oyGlBrwy1z12Dk4MEQZTQZueyUcpyPQC+aAPLC1b14V8pbnjfRhi8k6NLAFlMCxvyNOTf9gSJ8bc0CJiqhePx3vBRxxluQIDAQABAoIBADQ57i2n0BPctp0PGrJorkqQQ3JPde1CXFKdpMf96LThCx1PMIX7c0MTYH+GNqEQqeCzqmx+8Csp2mnuZXsQKJs6sXa9E1paVTRqvYiAQ86gl4CN9Sb7LlR8tZUeNgwcS2lbaLHuvlUMAuloDmet9/WqcBX/rFECfX7ciDVOabVVWESk89rqOvGsGcykBBWA8cvZRAhOqvO0PCfNvxrFZvmyRvcPuyZ3QaGL1xDYzhUlcVXysBB3dIP7WO3nOMYjk0bS4XvgZOnCx4Jycb7GA+11jL/MH4skQHdTLm55OWCcDkTX/pZHLq37lsIU8Rs6WvtA71zeIDKojZV6O+a1AKsCgYEA4ScmojU+8KiUF4Hf1ceXn/nwnDTOhmB260GnRExWhLEuK+0pvgiXvyS6csi5mUQ/0MbgL5N+csgbq15pKSqZr8QPhQcNpu+3+eeT9AvESnBc0bIn9l2FZlguDZ3Gnq9afBCsSvCQA+cVI4l1kSV3WMp5jlpIZnaZXA+Ba76NBmsCgYEA3Lx0YNyv1cI+ZnPA930zxGikcL44YhCAzBRH45WihTUAPDg24L41vD7bS+Ji/m+rMypU034tzI7dlvDKiYhkJveH0VHM7OvvFbDrh/YFObalZ6Na+pCdJaVGDnRQHRmw7+DPQhNmNuuP2VxJ6uox0gwgo+/Z5ad97+iQvouH5WsCgYEAj1RVC73Jq3oljDFpRLYil/yMZ2RWdMTD70+EI75U9XO1aNE5WXgu4ceHybpuLFt+JHH2FVNXk8o/kwAvAb3UyEePeafb0QGZpMT/MsSq2Jhe/j7jobo3SceoyZI+9pW6jHAwviQWCeX5Vv4SkavAJg3/A9gFbvTg+/IC+Yv8SrECgYBVvtcucUvUq3n17m09NmOPnl6SdTIN1f9SR2aNn6jcOfR3cBbRQtI45+nkFnMCB3rni0AcT92WosCtS6hBuLu+71TRGQeT2SqssGcuD4GEI9Eo6yoCP37sCsGmB8S/KSW0aQ3ZyxNfri3Y76K/IG5t+8wKIrfwIBopwZvIiQcnNQKBgQDWx46Ex3mEGTDUHCsaiISt14RAF5vU93hXXU6lQdAh84Iqe4OOmJMgM1yyDgn57IIZ9yjB5l+mB9t8eZxutashGKsslO1M6zyVScJbTCEiQ57DcyivoXd7pA1ny082PW9YncFO35ycZC8Ueb6xqjawQKdH5r3l5HwGa4YyZo7UOA==" ],
            "keyUse" : [ "ENC" ],
            "certificate" : [ "MIICoTCCAYkCBgGWppQPHDANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAllY29tbWVyY2UwHhcNMjUwNTA2MTcwOTAzWhcNMzUwNTA2MTcxMDQzWjAUMRIwEAYDVQQDDAllY29tbWVyY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCI2ROsyl49VAN6AYBG+kxMg8Q3S0wuh1yYhNoiMqRy2wDqdz6w9pt2vPaMxHxoRDE3AceBqU6VekRv5CfG62aXMBMaeIfmyon8cxl/NMUdSbOvyBX0tT23CwUwtI3BbioILrAHB15IEGYHxIYgEvKZZhJs5WTgGcr+aBpG10bkwiEFkR5iyKA6IL60QMwq3djnw+DYiSJ9bP7Z/EGehdh9pJGN8j0IFujNIabt+LWXEuRuNPOxzQ+zXqjIaUGvDLXPXYOTgwRBlNBm57JRynI9AL5oA8sLVvXhXylueN9GGLyTo0sAWUwLG/I05N/2BInxtzQImKqF4/He8FHHGW5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAKIR7EbBZ/kRGMGAc/PIOtr11pPs8c8iWeqG3vaYfDpWJdAbjZAIFjfwJafHNXy4u6fxjw3xCXp0TBj7ytsZk3uylUAN1DKb8nXw8Dr5bRG6xC++zwnWzo3wJ3ew4yt0IcrGbH7ZJ3NOtUmA8vCIFfY1h+jO56tGCmfefh8QllrFrpi9teeKaK3V2sfvD509OSobuUtq2KP0m6+eQhbgzWITaSIoptjQB949d4CjZHb9nee1d5/f93/tqMJ5g5aks7LOCppDHALUjxHLv2ERlr8CHvN3TZ0MSyeapmlTK4KjXVNQ8FwLwLnBnUvJz6NOG+TLGSv+AAvm35S78SOiAeU=" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        }, {
          "id" : "22529f3c-5b8c-4b17-b4a9-c260acde51b2",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "5923518f-e5f0-40d3-92f0-5fe46617fcd5" ],
            "secret" : [ "zyRSG6efJ5wnCudUxTjolQ" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "614e1724-6457-46e4-a642-cfeb2279cf6a",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEowIBAAKCAQEA2pDX1gPHXx5RGcteZBdJZgdN9u6WzmZRb3B9pt3pHqv532uOqdmuxdFWMpN5KXYnYI3CjM6AcjCSS7hoC/q/2JZZIMvTm1jHllyKjb555uBFpdq5FweC3axjR126E1F7aBmAuKWdJ+/Pki5Qy3hRcyCma5GBYwhf5z6j9sTQW0EuZvqqDVj3uRsI9QQt8Vp2RQjKFg8SBqA/sT5bvK8gfQHWAIqexcbooHRno5scVidLQITxuOX4acBs9dw/zkeNvFLGw/hzU93Tpkh723MBp56cUg+wcOJs/jdmvVTAwUEl92XQfpGib16wWK6xb2dTDKq9bslJeGkEn+6Avv9ieQIDAQABAoIBAAMZvYR/m2y9HHYEg9gt2ZcB11H/jEWGsqgLwGFe64djKPfJtriwUFtMPwmxPHpHy7Y1PJz/vvDsjhHwUai92JcR4Ipndp7qpJli9bCeEtLUiQuZxzkAgvnYqYEVK//jKFOC04GLELT4B3AYI4HhBcX5On/zJl+i+kbonuEJmLhHdTgrICTLu1ZcoP7nGkgQg/6ZRFk84uMX17TD6QRaf2JhY4k0uKhkAVlgvDnan6OG3QndhahmvpZbb+Agc78x62/oVxsZ1ai/4jpfJ2DU8nqjNwJsl7qx6IEkGIIQC0SpXsDnmfy5CSpT99ZXgB1DLxUDIz0k/lj6007kYbu2EdMCgYEA9fRoIxB7EcCAsvwpynxaKYtetHXgb2otjJV/ARVv79T+AbXQaywPC9hRA1D+fJurwg//5fGdpIAt090pTz3EUvrQI3l7mdXnuvcwjy7I1stnfErmX5jB3sJHKUAj3XWhS8Xc0gmRnGL6c81M7fv8gZAvFOkVh2LlXzI78mWE5l8CgYEA434R54Wy4Nno6DSwUXUqzHWwbqXDKAACWps0vnPxlXiF7mWyVhl3gBneYt3Dj75raNO8Ko6V9Ee8/n4+RybI1MGEOzHG53wMrpLKrEWzlOeW2qCI9deJ4UvFfb3Nld0AsQHF4LYyzYcG0TUTDQJUD77k1LHOOOFzmJ6akL8/9icCgYANKGAR0CXlUzkPWjIaJQDlzBDq8otpKnL5XF4I/s6YM/rKuKFHunmrlozu8nxKykEsBpMYCA745+qLtP8qwBEqp0RPQYZ9OlZFSEgOwN/5rbQBkDg20QM+GYKZEFda15ojZZhknCJwDVN8snT1Hk/p1n7OTZHbRk0jBJr0Yr3zXQKBgQCCCdCGPYCw0x81jNi013rtgOCnfw19UfQGgu21aGVSAaDdUziLyubqTN84OHfPNRQEyfOnh/XjuxYni1ZiKaNnKm9BvwRp0hkVuUctDnLGzVMICfgAP4LLTBrJ87MO1VPN2quX9c44edTFxcbsCsaucXowsqqlDQqc1RyZXRlcxQKBgDRUNrIsB5lqSr6dpiDcLSthek6ixxufmZ9YZ5bOFBsCTfgHmmIniF7iPrXzA4HJsmUX3CsEOuJVWb3jv2IqTAq15qpTB08UaCdmr/GvPkpoNDOJa5QzKWYeNuwKnLs9kOXOTZ1lfE/XdfM9/3Yqm+RJVDxGysvn0AM/d0cwvxem" ],
            "keyUse" : [ "SIG" ],
            "certificate" : [ "MIICoTCCAYkCBgGWppQNsDANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAllY29tbWVyY2UwHhcNMjUwNTA2MTcwOTAyWhcNMzUwNTA2MTcxMDQyWjAUMRIwEAYDVQQDDAllY29tbWVyY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDakNfWA8dfHlEZy15kF0lmB0327pbOZlFvcH2m3ekeq/nfa46p2a7F0VYyk3kpdidgjcKMzoByMJJLuGgL+r/Yllkgy9ObWMeWXIqNvnnm4EWl2rkXB4LdrGNHXboTUXtoGYC4pZ0n78+SLlDLeFFzIKZrkYFjCF/nPqP2xNBbQS5m+qoNWPe5Gwj1BC3xWnZFCMoWDxIGoD+xPlu8ryB9AdYAip7FxuigdGejmxxWJ0tAhPG45fhpwGz13D/OR428UsbD+HNT3dOmSHvbcwGnnpxSD7Bw4mz+N2a9VMDBQSX3ZdB+kaJvXrBYrrFvZ1MMqr1uyUl4aQSf7oC+/2J5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAK0v7eFmN/8eHkQWiJtYqPaH1dPdopOQLsDcyFciVNnUfPleuoLFYDG5ryLS0NswAoncmGE9Mz08NwENtbrGSVn7DiZscXGxS3U/cqHZp/tibh4+ZLSED4RKk2guoS5cfIL9LPUrk0TCBFFyCvhHnmujEWeEI+fXbGiG2HVNt00nhnEh3kDkVCDoOrMi+doNCp6bNl/QKmvlOsxc3mBs0R52p/cB9VIr94bkIPZ7Vh4GbR2jRf8yipPHQljj6fMhoi+ZoI4RPeIcMsYJXmwJphtWntcjItKkCzJkRpbedYmb7wTCKNCEZq7QHNm83mp2CZSM5P03Qpcz5YNoiL79IIM=" ],
            "priority" : [ "100" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "b7d30700-a512-4323-ba78-bdd8a5d07b34",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3c9c757d-5468-4399-897a-5d3b009479a4",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "d54dda06-76b8-47cc-a4ff-2152baf4331b",
        "alias" : "Browser - Conditional Organization",
        "description" : "Flow to determine if the organization identity-first login is to be used",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "organization",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "b1e7cd20-83b3-4a01-ac99-2106c1085ea6",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "559c268a-900f-48b6-8fb0-5ea278129591",
        "alias" : "First Broker Login - Conditional Organization",
        "description" : "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "idp-add-organization-member",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "1bc038a1-5232-444f-9424-84108870925f",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "94b729ec-1096-416d-9bd6-9c60f3700eac",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "e03cf953-4ea8-4ad9-a725-90a05fee6a52",
        "alias" : "Organization",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional Organization",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "0c7b6d22-24cf-432d-ae73-2e27a4bc5b7e",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "092f9890-0481-42fc-96f2-913df6db0c53",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "71027482-99c1-4637-9023-6db97853812f",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "139933a1-566a-4c2b-9a0a-43043eb82639",
        "alias" : "browser",
        "description" : "Browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 26,
          "autheticatorFlow" : true,
          "flowAlias" : "Organization",
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "a41bf927-c0cb-4e4d-832a-061625646bcc",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "4110edf4-684d-4074-ab1b-0d503009ae79",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "7b4b5b07-1ee0-4e54-a5d2-5c1781da2652",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "2868430f-e916-45a4-990b-8888e8657f7d",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 50,
          "autheticatorFlow" : true,
          "flowAlias" : "First Broker Login - Conditional Organization",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6dfcc4c0-a9fd-4242-a70a-fbf03a1fd499",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6a19b577-fd48-4158-bc7f-20095e8a41cf",
        "alias" : "registration",
        "description" : "Registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "66c326e5-3722-4a1f-b83e-4da9aa1857fb",
        "alias" : "registration form",
        "description" : "Registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-terms-and-conditions",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 70,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "836637fd-5b52-4fe9-b4b4-1018c89379d6",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f23feb2d-f370-4bb6-8cc5-5e5fdd081946",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "f92d17d3-9b63-4cf8-9103-c52578cfde08",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "6dee14f9-bb27-489f-86f4-4c746a452c32",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "TERMS_AND_CONDITIONS",
        "name" : "Terms and Conditions",
        "providerId" : "TERMS_AND_CONDITIONS",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "webauthn-register",
        "name" : "Webauthn Register",
        "providerId" : "webauthn-register",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 70,
        "config" : { }
      }, {
        "alias" : "webauthn-register-passwordless",
        "name" : "Webauthn Register Passwordless",
        "providerId" : "webauthn-register-passwordless",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 80,
        "config" : { }
      }, {
        "alias" : "VERIFY_PROFILE",
        "name" : "Verify Profile",
        "providerId" : "VERIFY_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 90,
        "config" : { }
      }, {
        "alias" : "delete_credential",
        "name" : "Delete Credential",
        "providerId" : "delete_credential",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 100,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "firstBrokerLoginFlow" : "first broker login",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaExpiresIn" : "120",
        "cibaAuthRequestedUserHint" : "login_hint",
        "oauth2DeviceCodeLifespan" : "600",
        "clientOfflineSessionMaxLifespan" : "0",
        "oauth2DevicePollingInterval" : "5",
        "clientSessionIdleTimeout" : "0",
        "parRequestUriLifespan" : "60",
        "clientSessionMaxLifespan" : "0",
        "clientOfflineSessionIdleTimeout" : "0",
        "cibaInterval" : "5",
        "realmReusableOtpCode" : "false"
      },
      "keycloakVersion" : "26.2.3",
      "userManagedAccessAllowed" : false,
      "organizationsEnabled" : false,
      "verifiableCredentialsEnabled" : false,
      "adminPermissionsEnabled" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }